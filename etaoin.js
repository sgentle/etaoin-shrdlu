// Generated by CoffeeScript 1.10.0
(function() {
  var textarea;

  textarea = document.getElementById('etaoin');

  Promise.all([
    fetch('letter_bigrams.txt').then(function(x) {
      return x.text();
    }), fetch('word_bigrams.txt').then(function(x) {
      return x.text();
    })
  ]).then(function(arg) {
    var caps, currentletter, currentword, i, j, l, len, len1, letterdata, letters, name, next, ref, ref1, ref2, restart, text, w, word1, word2, worddata, words;
    letterdata = arg[0], worddata = arg[1];
    letters = {};
    ref = letterdata.split('\n');
    for (i = 0, len = ref.length; i < len; i++) {
      l = ref[i];
      if (l) {
        (letters[name = l[0]] || (letters[name] = [])).push(l[1]);
      }
    }
    words = {};
    ref1 = worddata.split('\n');
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      w = ref1[j];
      if (!(w)) {
        continue;
      }
      ref2 = w.split('\t'), word1 = ref2[0], word2 = ref2[1];
      (words[word1] || (words[word1] = [])).push(word2);
    }
    console.log('initial letters', letters['^']);
    console.log('initial letters', words['<S>']);
    currentletter = '^';
    currentword = '';
    restart = function() {
      currentletter = '^';
      return currentword = '';
    };
    next = function(l) {
      var oldletter, rank, ref3;
      if (l === ' ') {
        return restart();
      }
      rank = letters[currentletter].indexOf(l);
      if (rank == null) {
        return restart();
      }
      currentword = (ref3 = words[currentword || "<S>"]) != null ? ref3[rank] : void 0;
      if (!currentword) {
        return restart();
      }
      oldletter = currentletter;
      currentletter = l;
      console.log("old letter", oldletter, "new letter", currentletter, "rank", rank, "new word", currentword);
      return currentword;
    };
    textarea.value += " Ready!\n";
    text = [];
    caps = true;
    return textarea.addEventListener('keypress', function(ev) {
      var key, val;
      ev.preventDefault();
      key = (ev.key || String.fromCharCode(ev.charCode)).toLowerCase();
      val = next(key);
      if (!val) {
        if (text[text.length - 1] && text[text.length - 1].slice(-1) !== '.') {
          text[text.length - 1] += '.';
        }
        caps = true;
      } else if (caps) {
        caps = false;
        text.push(val[0].toUpperCase() + val.slice(1));
      } else if (val.length === '1') {
        text.push(val.toUpperCase());
      } else {
        text.push(val);
      }
      textarea.scrollTop = textarea.scrollHeight;
      return textarea.value = text.join(' ');
    });
  });

}).call(this);
